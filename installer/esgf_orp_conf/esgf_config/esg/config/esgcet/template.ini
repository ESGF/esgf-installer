#------------------------------------------------------------------------------------------
# ESG publisher configuration
#
# This file is divided into sections, with names in square brackets. For example, 
# the default options are listed in the [DEFAULT] section. Defaults apply in 
# all sections. If an option is specified in another section, the value overrides the
# default in that section.
#
# Each section corresponds to an application or a project. For example, the esginitialize
# scripts reads options in the [initialize] section. Project sections have the form:
#    [project:project_id]
# Each project defined by project_options must have a separate section.
#------------------------------------------------------------------------------------------
# Shared options
[DEFAULT]
# 
# dburl defines the connection to the database. The form is:
#   db_driver://user:password@host:port/db_name
# where
#   db_driver = mysql for MySQL
#             = postgres for PostgreSQL
# Important! The database type (PostgreSQL / MySQL) is determined by the db_driver definition in the *default* configuration file (the one installed with python)!
dburl = postgresql://esgcet:esgcetpass@localhost:5432/esgcet

# Logging options:
# Log levels are DEBUG, INFO, WARNING, ERROR, and CRITICAL
# log_format fields are defined in the logging module
# log_filename specifies a log output file. The default is standard output. For example:
#   log_filename = %(here)s/data/esgcet.log
#   where %(here)s indicates the current directory.
# log_datefmt: format string used to output dates and times, same form as time.strftime()
log_level = WARNING
log_format = %(levelname)-10s %(asctime)s %(message)s
# log_filename = %(here)s/data/esgcet.log

# Root dataset ID field
root_id = pcmdi

# List identifiers of all gateways
gateway_options = ESG-PCMDI, ESG-NCAR, ESG-ORNL, ESG-BADC, ESG-NCI

# Associate THREDDS service type and service base. The service_base forms the leading
# part of the THREDDS URL.
# THREDDS serviceType | service_base | service_name
# 
thredds_aggregation_services =
  OpenDAP | /thredds/dodsC/ | gridded
  LAS | http://host.sample.gov/las/getUI.do/ | LASatYourHost
#   WCS | /thredds/wcs/
thredds_file_services =
  HTTPServer | /thredds/fileServer/ | HTTPServer | fileservice
  GridFTP | gsiftp://host.sample.gov:2811/ | GRIDFTP | fileservice
  OpenDAP | /thredds/dodsC/ | OpenDAPServer | fileservice
thredds_offline_services =
  SRM | srm://host.sample.gov:6288/srm/v2/server?SFN=/archive.sample.gov | HRMatPCMDI

# Associate a TTHREDDS path with the absolute location of a dataset directory:
#   tds_path | absolute_location
# This gets translated to <datasetRoot path="tds_path" location="absolute_location" />
thredds_dataset_roots =
  esg_dataroot | /esg/data

# Value of the dataset 'restrictAccess' attribute
thredds_restrict_access = esg-user

# THREDDS reinitialization parameters
# Name of the basic authentication realm
thredds_authentication_realm = THREDDS Data Server

# TDS reinitialization URL
# For V3
# thredds_reinit_url = https://localhost:443/thredds/debug?catalogs/reinit
# For V4
#thredds_reinit_url = https://localhost:443/thredds/admin/debug?catalogs/reinit
# for v5
thredds_reinit_url = https://localhost:443/thredds/admin/debug?Catalogs/reinit
#This is potentially experimental but will cause an error with the publisher.
#thredds_reinit_url = https://localhost:443/thredds/admin/debug?Catalogs/recheck



# Pattern indicating success of TDS reinitialization
thredds_reinit_success_pattern = reinit ok

# TDS error log URL
# For V3
# thredds_reinit_error_url = https://localhost:443/thredds/content/logs/catalogErrors.log
# For V4
thredds_reinit_error_url = https://localhost:443/thredds/admin/content/logs/catalogInit.log

# Pattern that delimits the TDS error log for the most recent reinit
thredds_error_pattern = Catalog init

# TDS error log fatal error pattern
thredds_fatal_error_pattern = **Fatal

# Tomcat TDS user
thredds_username = dnode_user
thredds_password = changeme

# Specify target for THREDDS catalog generation
#
# Each dataset catalog will be written to a file named
#
# <thredds_root>/nnn/<thredds_catalog_basename>
#
# where 'nnn' is an integer, and:
#
#   thredds_root = top level directory. An absolute path, not containing any substitution patterns.
#   thredds_url = URL of the top-level THREDDS directory
#   thredds_catalog_basename = basename of the catalog. Should contain the patterns %(dataset_id)s and %(version)s, and have extension .xml
#   thredds_max_catalogs_per_directory = max number of catalogs in a subdirectory
#   thredds_master_catalog_name = description of the TDS master catalog
#
# The master catalog is named <thredds_root>/catalog.xml
#
thredds_root = /esg/content/thredds/esgcet

# for V4
# thredds_url = http://yourhost/thredds/esgcet
# for V5
thredds_url = http://yourhost/thredds/catalog/esgcet

thredds_catalog_basename = %(dataset_id)s.v%(version)s.xml
thredds_max_catalogs_per_directory = 500
thredds_master_catalog_name = Earth System Grid catalog
thredds_root_catalog_name = Earth System Root catalog

# These options describe the available THREDDS services to the gateway.
#    thredds_service_applications = service_name | associated_client [service_name | associated_client ...]
#    thredds_service_auth_required = true_or_false: describes whether the gateway must authenticate the service
#    thredds_service_descriptions = service_name | service_description [service_name | service_description ...]
# thredds_service_applications =
#       GRIDFTPatPCMDI | DataMover-Lite
#       HTTPServer | Web Browser
#       HTTPServer | Web Script
#       gridded | Web Browser
# thredds_service_auth_required =
#       GRIDFTPatPCMDI | true
#       HTTPServer | true
#       gridded | false
# thredds_service_descriptions =
#       GRIDFTPatPCMDI | PCMDI GridFTP
#       HTTPServer | PCMDI TDS
#       gridded | PCMDI OPeNDAP

# Publishing service options
#   hessian_service_url = URL of the gateway publishing service endpoint
#   hessian_service_port = SSL gateway port number
#   hessian_service_debug = true | false; if true print debugging information when the gateway is contacted
#   hessian_service_certfile = X.509 user certificate
#   hessian_service_keyfile = X.509 user key file (may be the same as the cert file)
#   hessian_service_polling_delay = seconds to wait after initial publication before checking status
#   hessian_service_polling_iterations = number of times to poll for publishing status
#   hessian_service_remote_metadata_url = URL of the remote metadata service

hessian_service_url = https://host/esgcet/remote/secure/client-cert/hessian/publishingService
hessian_service_port = 443
hessian_service_debug = false
hessian_service_certfile = %(home)s/.globus/certificate-file
hessian_service_keyfile = %(home)s/.globus/certificate-file
hessian_service_polling_delay = 3
hessian_service_polling_iterations = 10
hessian_service_remote_metadata_url = http://host/esgcet/remote/hessian/guest/remoteMetadataService

# offline_lister: Program to list offline datasets. The program should take the top-level directory as an argument,
#   and return a listing of "path size" on each line.
# 
#   Set this option to either:
#     srmls (and set additional options in the [srmls] section), or
#     hsi   (and set hsi options in the [hsi] section).
#
# offline_lister = srmls
offline_lister =
  HRMatPCMDI | hsi

# Uncomment this line to enable checksumming, and ensure the client is in your path.
# The form is
#   checksum = checksum_client | checksum_type
checksum = sha256sum | SHA256

# All projects
#   project_name | project_description | search_order
# There must be a [project:project_name] section for each project listed.
# search_order determines the order in which the associated handlers are searched
# when no project has been specified, with the lowest number searched first.
# The first handler that successfully opens the data file is used.
project_options = 
  cmip5 | CMIP5 | 1
  ipcc4 | IPCC Fourth Assessment Report | 2
  test | Test Project | 3

#------------------------------------------------------------------------------------------
# Database initialization
# Options in this section are used by esginitialize.
[initialize]
log_level = INFO
initial_models_table = /esg/config/esgcet/esgcet_models_table.txt

# Specify the location of the CF standard name table and ESG-CET models.
# By default they are installed in:
#   SITE_PACKAGES/esgcet/config/etc
# where SITE_PACKAGES is the Python site-packages installation directory.
# initial_standard_name_table = %(home)s/.esgcet/cf-standard-name-table.xml
# initial_models_table = %(home)s/.esgcet/esgcet_models_table.txt

#------------------------------------------------------------------------------------------
# Project-specific configuration
# CMIP5 / IPCC AR5
[project:cmip5]

# IPCC5 experiments
# project | experiment_name | experiment_description
experiment_options = 
  cmip5 | 1pctCO2 | 1 percent per year CO2
  cmip5 | abrupt4xCO2 | abrupt 4XCO2
  cmip5 | amip | AMIP
  cmip5 | amip4K | AMIP plus 4K anomaly
  cmip5 | amip4xCO2 | 4xCO2 AMIP
  cmip5 | amipFuture | AMIP plus patterned anomaly
  cmip5 | aqua4K | aqua planet plus 4K anomaly
  cmip5 | aqua4xCO2 | 4xCO2 aqua planet
  cmip5 | aquaControl | aqua planet control
  cmip5 | decadal1960 | 10- or 30-year run initialized in year 1960
  cmip5 | decadal1965 | 10- or 30-year run initialized in year 1965
  cmip5 | decadal1970 | 10- or 30-year run initialized in year 1970
  cmip5 | decadal1975 | 10- or 30-year run initialized in year 1975
  cmip5 | decadal1980 | 10- or 30-year run initialized in year 1980
  cmip5 | decadal1985 | 10- or 30-year run initialized in year 1985
  cmip5 | decadal1990 | 10- or 30-year run initialized in year 1990
  cmip5 | decadal1995 | 10- or 30-year run initialized in year 1995
  cmip5 | decadal2000 | 10- or 30-year run initialized in year 2000
  cmip5 | decadal2001 | 10- or 30-year run initialized in year 2001
  cmip5 | decadal2002 | 10- or 30-year run initialized in year 2002
  cmip5 | decadal2003 | 10- or 30-year run initialized in year 2003
  cmip5 | decadal2004 | 10- or 30-year run initialized in year 2004
  cmip5 | decadal2005 | 10- or 30-year run initialized in year 2005
  cmip5 | decadal2006 | 10- or 30-year run initialized in year 2006
  cmip5 | decadal2007 | 10- or 30-year run initialized in year 2007
  cmip5 | decadal2008 | 10- or 30-year run initialized in year 2008
  cmip5 | decadal2009 | 10- or 30-year run initialized in year 2009
  cmip5 | decadal2010 | 10- or 30-year run initialized in year 2010
  cmip5 | esmControl | ESM pre-industrial control
  cmip5 | esmFdbk1 | ESM feedback 1
  cmip5 | esmFdbk2 | ESM feedback 2
  cmip5 | esmFixClim1 | ESM fixed climate 1
  cmip5 | esmFixClim2 | ESM fixed climate 2
  cmip5 | esmHistorical | ESM historical
  cmip5 | esmrcp85 | ESM RCP8.5
  cmip5 | historical | historical
  cmip5 | historicalExt | extension of the historical simulation (experiment 3.2) through year 2012
  cmip5 | historicalGHG | historical, well-mixed greenhouse gases only
  cmip5 | historicalMisc | historical simulation but with other individual forcing agents or combinations of forcings
  cmip5 | historicalNat | historical, natural forcing only
  cmip5 | lgm | last glacial maximum
  cmip5 | midHolocene | mid-Holocene
  cmip5 | noVolc1960 | volcano-free hindcasts initiated in 1960
  cmip5 | noVolc1975 | volcano-free hindcasts initiated in 1975
  cmip5 | noVolc1980 | volcano-free hindcasts initiated in 1980
  cmip5 | noVolc1985 | volcano-free hindcasts initiated in 1985
  cmip5 | noVolc1990 | volcano-free hindcasts initiated in 1990
  cmip5 | past1000 | last millennium
  cmip5 | piControl | pre-industrial control
  cmip5 | rcp26 | RCP2.6
  cmip5 | rcp45 | RCP4.5
  cmip5 | rcp60 | RCP6
  cmip5 | rcp85 | RCP8.5
  cmip5 | sst2030 | 2030 time-slice
  cmip5 | sstClim | control SST climatology
  cmip5 | sstClim4xCO2 | CO2 forcing
  cmip5 | sstClimAerosol | all aerosol forcing
  cmip5 | sstClimSulfate | sulfate aerosol forcing
  cmip5 | volcIn2010 | prediction with 2010 volcano

# Define the categories to be used for this project:
#   name | category_type | is_mandatory | is_thredds_property | display_order

categories =
  project | enum | true | true | 0
  experiment | enum | true | true | 1
  product | enum | true | true | 2
  model | enum | true | true | 3
  time_frequency | enum | true | true | 4
  realm | enum | true | true | 5
  cmor_table | enum | true | true | 6
  ensemble | string | true | true | 7
  institute | enum | true | true | 8
  forcing | string | false | true | 9
  title | string | false | true | 10
  creator | enum | false | false | 11
  publisher | enum | false | false | 12
  creation_time | string | false | true | 13
  format | fixed | false | true | 14
  source | text | false | false | 15
  drs_id | string | false | true | 16
  description | text | false | false | 99

category_defaults = 
  product | requested

# Enumerated values
realm_options = atmos, ocean, land, landIce, seaIce, aerosol, atmosChem, ocnBgchem
time_frequency_options = yr, mon, day, 6hr, 3hr, subhr, monClim, fx
cmor_table_options = 3hr, 6hrLev, 6hrPlev, Amon, LImon, Lmon, OImon, Oclim, Omon, Oyr, aero, cf3hr, cfDay, cfMon, cfOff, cfSites, day, fx, grids
institute_options =  BCC, CAWCR, CCCMA, CMCC, CNRM-CERFACS, CSIRO-QCCCE, EC-EARTH, GFDL, GISS, INM, IPSL, LASG, MIROC, MOHC, MPI-M, MRI, NCAR, NCC, NIMR, PCMDI

product_options = output1, output2, output

# Class name of the IPCC5 project handler.
handler = esgcet.config.ipcc5_handler:IPCC5Handler

# Format of generated dataset IDs
parent_id = pcmdi.PCMDI
dataset_id = cmip5.%(product)s.%(institute)s.%(model)s.%(experiment)s.%(time_frequency)s.%(realm)s.%(cmor_table)s.%(ensemble)s

# Directory format. This is used to determine field values by matching directory names.
directory_format = /data/publish_test/cmip5_test
dataset_name_format = project=%(project_description)s, model=%(model_description)s, experiment=%(experiment_description)s, time_frequency=%(time_frequency)s, modeling realm=%(realm)s, ensemble=%(ensemble)s, version=%(version)s

# Exclude these variables from THREDDS catalogs. They are still added to the database.
thredds_exclude_variables = a, a_bnds, alev1, alevel, alevhalf, alt40, b, b_bnds, bnds, bounds_lat, bounds_lon, dbze, depth, depth0m, depth100m, depth_bnds, geo_region, height, height10m, height2m, lat, lat_bnds, latitude, latitude_bnds, layer, lev, lev_bnds, location, lon, lon_bnds, longitude, longitude_bnds, olayer100m, olevel, oline, p0, p220, p500, p560, p700, p840, plev, plev3, plev7, plev8, plev_bnds, plevs, pressure1, region, rho, scatratio, sdepth, sdepth1, sza5, tau, tau_bnds, time, time1, time2, time_bnds, vegtype

# Maps
maps = institute_map, las_time_delta_map

institute_map = map(model : institute)
  bcc-csm | BCC
  cawcr-access | CAWCR
  cccma-canesm2 | CCCMA
  cmcc-cm | CMCC
  cmcc-cms | CMCC
  cmcc-esm | CMCC
  cnrm-cm5 | CNRM-CERFACS
  csiro-mk3-5A | CSIRO
  echam6-mpiom-hr | MPI-M
  echam6-mpiom-lr | MPI-M
  ec-earth | EC-EARTH
  gfdl-cm2-1 | GFDL
  gfdl-cm3 | GFDL
  gfdl-esm2g | GFDL
  gfdl-esm2m | GFDL
  gfdl-hiram | GFDL
  giss-e | GISS
  inmcm4 | INM
  ipsl-cm5 | IPSL
  ipsl-cm6 | IPSL
  lasg-fgoals-g2 | LASG
  lasg-fgoals-gl | LASG
  lasg-fgoals-s2 | LASG
  miroc-esm | MIROC
  miroc-esm-chem | MIROC
  miroc4m | MIROC
  miroc4h | MIROC
  miroc5 | MIROC
  mohc-hadcm3 | MOHC
  mohc-hadcm3q | MOHC
  mohc-hadgem2-es | MOHC
  mohc-higem1-2 | MOHC
  mri-am20km | MRI
  mri-am60km | MRI
  mri-cgcm3 | MRI
  mri-esm1 | MRI
  ncar-ccsm4-h | NCAR
  ncar-ccsm4-m | NCAR
  ncc-noresm | NCC
  nimr-hadgem2-ao | NIMR
  pcmdi-test | PCMDI

# LAS options
# Uncomment if LAS URLs should be generated in THREDDS catalogs.
las_configure = true

las_time_delta_map = map(time_frequency : las_time_delta)
  yr	  | 1 year
  mon	  | 1 month
  day	  | 1 day
  6hr	  | 6 hours
  3hr	  | 3 hours
  1hr     | 1 hour
  subhr   | 1 minute
  monclim | 1 month
  fx      | fixed

# Set true if files follow the IPCC standard of one variable per file.
# If set, the THREDDS metadata is organized as per-variable datasets.
# Otherwise, the datasets are assumed to be per-time.
variable_per_file = true

#------------------------------------------------------------------------------------------
[project:ipcc4]

# IPCC4 experiments
# project | experiment_name | experiment_description
experiment_options = 
  ipcc4 | 20c3m | climate of the 20th century
  ipcc4 | 1pctto2x | 1 percent/year CO2 increase experiment (to doubling)
  ipcc4 | 1pctto4x | 1 percent/year CO2 increase experiment (to quadrupling)
  ipcc4 | picntrl | pre-industrial control
  ipcc4 | pdcntrl | present-day control
  ipcc4 | 2xco2 | doubled CO2 equilibrium 
  ipcc4 | commit | committed climate change
  ipcc4 | sresa1b | 720 ppm stabilization
  ipcc4 | sresa2 | SRES A2
  ipcc4 | sresb1 | 550 ppm stabilization
  ipcc4 | amip | AMIP
  ipcc4 | slabcntl | slab ocean control

# Define the categories to be used for this project:
#   name | category_type | is_mandatory | is_thredds_property | display_order
# 
# name: category name
# category_type: one of:
#    enum: enumerated value. There must be a corresponding <name>_options option
#    text: multi-line text string
#    string: single-line text string
#    fixed: a fixed value, can be displayed but not modified
# is_mandatory: the category must be defined
# is_thredds_property: the category will be represented in the THREDDS output as a <property> element
# display_order: ordering in the dataset display, with the smallest value first
#
categories =
  project | enum | true | true | 0
  experiment | enum | true | true | 1
  model | enum | true | true | 2
  time_frequency | enum | true | true | 3
  submodel | enum | false | false | 4
  run_name | string | true | true | 5
  title | string | false | true | 6
  creator | enum | false | false | 7
  publisher | enum | false | false | 8
  creation_time | string | false | true | 9
  format | fixed | false | true | 11
  source | text | false | false | 13
  description | text | false | false | 99

# Enumerated values
creator_options =
  Contact_1 | Contact_1@samp.org | http://sample.samp.org
  Contact_2 | Contact_2@foo.net | 
time_frequency_options = 3hourly, daily, fixed, monthly, yearly
publisher_options =
  Publisher_1 | Publisher_1@samp.org | http://sample.samp.org
  Publisher_2 | Publisher_2@foo.net | http://sample.foo.net
submodel_options = atm, ocn, land, ice, fixed

# Name of the IPCC4 project handler.
#   handler_name = name
# Predefined handler names: basic_builtin, ipcc4_builtin, ipcc5_builtin, tamip_builtin, obs4mips_builtin
project_handler_name = ipcc4_builtin

# Format of generated dataset IDs
# The parent ID is the location into which the dataset will be published
# dataset_id = %(root_id)s.%(project)s.%(model)s.%(experiment)s.%(run)s.%(time_frequency)s.%(submodel_combined)s
# dataset_id = %(root_id)s.%(project)s.%(model)s.%(experiment)s.%(run)s.%(time_frequency)s.%(table_id)s.%(variable)s
# dataset_id = %(root_id)s\.%(project)s\.%(model)s\.%(experiment)s\.%(run_name)s\.%(time_frequency)s
dataset_id = %(root_id)s.%(project)s.%(model)s.%(experiment)s.%(run_name)s.%(time_frequency)s
parent_id = %(root_id)s.%(project)s.%(model)s

# Maps
maps = time_frequency_map, cmor_table_map, submodel_combined_map

time_frequency_map = map(time_frequency_short : time_frequency)
  3h    | 3hourly
  da    | daily
  fixed | monthly
  mo    | monthly
  yr    | yearly

submodel_combined_map = map(submodel : submodel_combined)
  atm   | atm
  ocn   | ocn
  land  | atm
  ice   | ocn

cmor_table_map = map(submodel, time_frequency_short : cmor_table_id)
  atm | mo | A1
  atm | da | A2
  atm | 3h | A3
  atm | yr | A4
  atm | forcing | A5
  ice | mo | A1
  land | fixed | A1
  land | mo | A1
  ocn | fixed | A1
  ocn | mo | O1

# Directory format. This is used to determine field values by matching directory names.
#   May be a single pattern or a list of patterns separated by vertical bars (|)
#   If more than one pattern is specified, the first matching pattern is used. Consequently, if more than one
#   pattern could be matched, make sure the most specific is listed first, otherwise it will never be used.
#   The order is significant!
directory_format = /ipcc/%(experiment)s/%(submodel)s/%(time_frequency_short)s/%(variable)s/%(model)s/%(run_name)s

# Format of generated descriptions. These comprise the THREDDS catalog names that
# are actually displayed
dataset_name_format = project=%(project_description)s, model=%(model_description)s, experiment=%(experiment_description)s, run=%(run_name)s, time_frequency=%(time_frequency)s, version=%(version)s

# THREDDS will map aggregation URLs of the form:
#   http://hostname/<service_base><thredds_aggregations_root_path><aggregation_path>
# to the physical location:
#   <thredds_aggregations_root_location><aggregation_path>
#
# For example:
#   http://hostname:8080/thredds/dodsC/ipcc4/aggregates/somepath/ps_A1.xml
# maps to:
#   /var/www/html/aggregates/ipcc4/somepath/ps_A1.xml
#
# See DEFAULT section for service_base definitions
thredds_aggregations_root_path = ipcc4/aggregates
thredds_aggregations_root_location = /var/www/html/aggregates/ipcc4/

# Exclude these variables from THREDDS catalogs. They are still added to the database.
thredds_exclude_variables = a, a_bnds, b, b_bnds, bounds_lat, bounds_lon, height, lat_bnds, lev_bnds, lon_bnds, p0, time_bnds, lat, lon, time, lev, depth, depth_bnds, plev, geo_region

# Variable ps is located in files ps_XX.nc
variable_locate = ps,ps_

# Set true if files follow the IPCC standard of one variable per file.
# If set, the THREDDS metadata is organized as per-variable datasets.
# Otherwise, the datasets are assumed to be per-time.
variable_per_file = true

#------------------------------------------------------------------------------------------
[project:test]

# Define the categories to be used for this project:
#   name | category_type | is_mandatory | is_thredds_property | display_order
# 
# name: name of the project
# category_type: one of:
#    enum: enumerated value. There must be a corresponding <name>_options option
#    text: multi-line text string
#    string: single-line text string
#    fixed: a fixed value, can be displayed but not modified
# is_mandatory: the category must be defined
# is_thredds_property: the category will be represented in the THREDDS output as a <property> element
# display_order: ordering in the dataset display, with the smallest value first
experiment_options = 
  test | test_exp | test experiment

categories =
  project | enum | true | true | 0
  experiment | enum | false | false | 1
  model | string | false | false | 2

category_defaults = 
  experiment | test_exp
  model | ncar_ccsm3_0

project_handler_name = basic_builtin
parent_id = pcmdi.test
variable_per_file = false
directory_format = /esg/data/test
dataset_id = test.test

thredds_exclude_variables = a, a_bnds, b, b_bnds, bounds_lat, bounds_lon, height, lat_bnds, lev_bnds, lon_bnds, p0, time_bnds, lat, lon, longitude, latitude, time, lev, depth, depth_bnds, plev, geo_region, plev_bnds, tau_bnds, longitude_bnds, latitude_bnds, tau, region, layer, pressure1, bnds

las_configure = false

#------------------------------------------------------------------------------------------
# Metadata extraction
[extract]
# Issue a warning if a standard name is missing or invalid
validate_standard_names = True
log_level = INFO

#------------------------------------------------------------------------------------------
# srm-ls options
[srmls]

# The form of the SRM target is <srm_server>?SFN=<srm_archive>path
offline_lister_executable = %(home)s/work/Esgcet/esgcet/scripts/srmls.py
srmls = /usr/local/esg/bin/srm-ls
srm_server = srm://somehost.llnl.gov:6288/srm/v2/server
srm_archive = /garchive.nersc.gov

#------------------------------------------------------------------------------------------
# hsi options
[hsi]
offline_lister_executable = %(home)s/work/Esgcet/esgcet/scripts/hsils.py
hsi = /usr/local/bin/hsi
